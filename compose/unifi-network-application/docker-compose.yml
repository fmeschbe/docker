# see: https://github.com/linuxserver/docker-unifi-network-application

networks:
  default:
    name: dmz
    external: true
  mongo:
    attachable: false

volumes:
  config:
  db:
  configdb:

secrets:
  db_admin_password:
    file: ./db_admin_password.txt
  unifi_password:
    file: ./unifi_password.txt

services:
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-network-application
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Zurich
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DBNAME=${UNIFI_MONGO_DBNAME:?Mongo DB name is required}
      - MONGO_USER=${UNIFI_MONGO_USER:?Mongo DB User is required}
      - FILE__MONGO_PASS=${UNIFI_MONGO_PASS_FILE?Mongo DB Password is required}
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - VIRTUAL_HOST=unifi.meschberger.ch
    volumes:
      - ${VOLUME_ROOT}config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      # - 8843:8843 #optional
      # - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    networks:
      default:
      mongo:
    secrets:
      - unifi_password
    sysctls:
      net.ipv6.conf.all.disable_ipv6: 1

  mongo:
    image: mongo:4.4
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/db_admin_password
    volumes:
      - ${VOLUME_ROOT}db:/data/db
      - ${VOLUME_ROOT}configdb:/data/configdb
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
      - ./.env:/docker-entrypoint-initdb.d/.env:ro
    networks:
      mongo:
    secrets:
      - db_admin_password
      - unifi_password
